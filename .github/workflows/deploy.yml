name: Build and Deploy to Azure Container Apps

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"2837fa98-ba70-4d44-a7e7-730ceb335460","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
        
    - name: Load environment variables
      run: |
        source .env
    
    - name: Initialize Terraform
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: latest
        tf_actions_subcommand: init

    - name: Apply Terraform configuration
      env:
        TF_VAR_azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      run: terraform apply -auto-approve

    - name: Build and push Docker image to ACR
      run: |
        docker build -t apploginubtechtest.azurecr.io/applogin:prod .
        docker push apploginubtechtest.azurecr.io/applogin:prod

    - name: Set output
      run: echo "::set-output name=image::apploginubtechtest.azurecr.io/applogin:prod"
      id: vars
    outputs:
      image: ${{ steps.vars.outputs.image }}

  deploy-container-app:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"2837fa98-ba70-4d44-a7e7-730ceb335460","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

    - name: Deploy to Azure Container Apps
      uses: azure/container-apps-deploy-action@v1
      with:
        acrName: apploginubtechtest
        containerAppName: applogin
        resourceGroup: osher-rg
        imageToDeploy: ${{ needs.deploy.outputs.image }}
        targetPort: 80