name: Deploy to Azure Container Apps

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"2837fa98-ba70-4d44-a7e7-730ceb335460","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: apploginubtechtest.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image to ACR
        run: |
          docker build -t apploginubtechtest.azurecr.io/applogin:${{ github.sha }} .
          docker push apploginubtechtest.azurecr.io/applogin:${{ github.sha }}

      - name: Assign AcrPull role to ACA's managed identity
        uses: azure/CLI@v1
        with:
          inlineScript: |
            acrId=$(az acr show --name apploginubtechtest --query id --output tsv)
            managedIdentityId=$(az containerapp show --name applogin --resource-group osher-rg --query identity.principalId --output tsv)
            az role assignment create --assignee $managedIdentityId --scope $acrId --role acrpull

      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          acrName: apploginubtechtest
          appName: applogin
          resourceGroup: osher-rg
          imageToDeploy: apploginubtechtest.azurecr.io/applogin:${{ github.sha }}
          containerPort: 80